1. Platform requirements
   Ubuntu 16.04 TLS
   Install Golang enviroment and set up GOPATH
   Keep the ports 17717, 8545 in the system accessible

2. Get the lastest code from github.com/TesraSupernet/TesraMainChain.git and check out the develop branch

3. Put or clone the code in the folder :$GOPATH/src/github.com/TesraSupernet/TesraMainChain

4. In the folder $GOPATH/src/github.com/TesraSupernet/TesraMainChain,type the command:

	make all

5. After building successfully, the tool will be in the folder $GOPATH/src/github.com/TesraSupernet/TesraMainChain/build/bin

   Notes: If there is no build enviroment for building TesraMainChain code, you can build the TesraMainChain code on an other computer, copy the built tools in $GOPATH/src/github.com/TesraSupernet/TesraMainChain/build/bin to the target computer then continue with the following steps.
   
6. Put the build in keystore files in the folder ~/.tesramainchain/keystore

7. Put the corresponding pw files in the folder ~/.tesramainchain/

8. In the folder $GOPATH/src/github.com/TesraSupernet/TesraMainChain/build/bin, type following command:
   
   If it is the first bootnodes
   ./tesramain -verbosity 5 --datadir ~/.tesramainchain --gasprice 20000 --etherbase 0xf9b32578b4420a36f132db32b56f3831a7cc1804 --unlock 0xf9b32578b4420a36f132db32b56f3831a7cc1804 --password ~/.tesramainchain/pwdfile --mine --minerthreads 1 --rpc --rpcaddr 0.0.0.0 --rpcapi eth,personal,net,admin,tsr --nodekey ~/.tesramainchain/nodekey/nodekey --nodiscover   
   
   If it is just a normal node, use the following commands:   
    node2
	./tesramain -verbosity 5 --datadir ~/.tesramainchain --gasprice 20000 --etherbase 0x810524175efa012446103d1a04c9f4263a962acc --unlock 0x810524175efa012446103d1a04c9f4263a962acc --password ~/.tesramainchain/pwdfile --mine --minerthreads 1 --nodekeyhex 900d0981bde924f82b7e8ccec52e2b07c2b0835cc22143d87f7dae2b733b3e57  

	node3
	./tesramain -verbosity 5 --datadir ~/.tesramainchain --gasprice 20000 --etherbase 0xdb05642eabc8347ec78e21bdf0d906ba579d423a --unlock 0xdb05642eabc8347ec78e21bdf0d906ba579d423a --password ~/.tesramainchain/pwdfile --mine --minerthreads 1 --nodekeyhex 6d592b74c53bfcc24b547225a29a6815f26a917ae9a22f2dedda058e7ec161c0  

	node4
	./tesramain -verbosity 5 --datadir ~/.tesramainchain --gasprice 20000 --etherbase 0x7e98bc5a465c1d2afa6b9376709a525981f53d49 --unlock 0x7e98bc5a465c1d2afa6b9376709a525981f53d49 --password ~/.tesramainchain/pwdfile --mine --minerthreads 1 --nodekeyhex 9780c4081b5b1191d664c5f55efab9c5de6f6c9678b9f61d7b1a17f3fc208aa3  

	node5
	./tesramain -verbosity 5 --datadir ~/.tesramainchain --gasprice 20000  --etherbase 0x0036805b6846f26ac35f2a7d7eda4a2a58f08e8e --unlock 0x0036805b6846f26ac35f2a7d7eda4a2a58f08e8e --password ~/.tesramainchain/pwdfile --mine --minerthreads 1 --nodekeyhex 9218e55f3cf88de176126f087796f3148138bb38be315b9913cf463b982dc65d
	
   notes: --etherbase address is from the prebuild keystores
		  --verbosity is just for debug
		  --rpc --rpcaddr --rpcapi can be removed if we do not provide rpc service on this node
		  --nodekey is prebuild for bootnodes	

9. Transfer tsr from account to an other account, like the accounts[1]
   personal.unlockAccount("0xbd100cf8286136659a7d63a38a154e28dbf3e0fd","dc",9999);
   eth.sendTransaction({from:eth.accounts[1],to:eth.accounts[2],value:web3.toTsl(10)})

10. Check balance:
   web3.fromTsl(eth.getBalance(eth.accounts[1]))	
   
11. Test tsrcoin private transaction:
   in the folder $GOPATH/src/github.com/TesraSupernet/TesraMainChain/build/bin
   ./tesramain attach http://118.190.33.66:8545
   
   loadScript("../../loadScript/tsrcoin.js")
   
   loadScript("../../loadScript/tsrtoken.js")

12. If you need keystore, pwdfile or nodekey, contact the TesraSupernet Chongqing team at info@TesraSupernet.org
   
   
   
	
	
   
   
   
   
   
